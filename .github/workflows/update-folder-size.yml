name: Update Folder Sizes

on:
  push:
    branches: [ main ]  # 只在 main 分支 push 时运行

jobs:
  update_sizes:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Calculate folder sizes
        run: |
          # 计算文件夹大小并生成 JSON
          echo "Calculating folder sizes..."
          echo 'const folders = [' > script/folders.js
          
          # 计算 music 文件夹大小
          MUSIC_SIZE=$(du -sh music | awk '{print $1}')
          echo "{ name: 'music', path: 'music/music.html', size: '$MUSIC_SIZE' }," >> script/folders.js
          
          # 计算 style 文件夹大小
          STYLE_SIZE=$(du -sh style | awk '{print $1}')
          echo "{ name: 'style', path: 'style/style.html', size: '$STYLE_SIZE' }," >> script/folders.js
          
          # 计算 js 文件夹大小
          JS_SIZE=$(du -sh js | awk '{print $1}')
          echo "{ name: 'js', path: 'js/js.html', size: '$JS_SIZE' }," >> script/folders.js
          
          echo '];' >> script/folders.js

          # 计算 mirror 文件夹大小
          MIRROR_SIZE=$(du -sh mirror | awk '{print $1}')
          echo "{ name: 'mirror', path: 'mirror/mirror.html', size: '$MIRROR_SIZE' }," >> script/folders.js
          
          echo '];' >> script/folders.js

# 计算 mirror 文件夹大小
          PHOTO_SIZE=$(du -sh photo | awk '{print $1}')
          echo "{ name: 'photo', path: 'photo/photo.html', size: '$PHOTO_SIZE' }," >> script/folders.js
          
          echo '];' >> script/folders.js
          
          # 计算 audio 文件夹大小
          AUDIO_SIZE=$(du -sh audio | awk '{print $1}')
          echo "{ name: 'audio', path: 'audio/audio.html', size: '$AUDIO_SIZE' }," >> script/folders.js
          
          echo '];' >> script/folders.js

      - name: Commit changes
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git add script/folders.js
          git commit -m "Update folder sizes [skip ci]" || exit 0
          git push 
          env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}